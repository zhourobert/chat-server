<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.chat.dao.UserDao">

    <resultMap type="com.qf.chat.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="header" column="header" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="spell" column="spell" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into my_chat.user(usernamepasswordnicknameheaderemailspellcreate_timeupdate_timestatusdel_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.username}#{entity.password}#{entity.nickname}#{entity.header}#{entity.email}#{entity.spell}#{entity.createTime}#{entity.updateTime}#{entity.status}#{entity.delFlag})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into my_chat.user(usernamepasswordnicknameheaderemailspellcreate_timeupdate_timestatusdel_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}#{entity.password}#{entity.nickname}#{entity.header}#{entity.email}#{entity.spell}#{entity.createTime}#{entity.updateTime}#{entity.status}#{entity.delFlag})
        </foreach>
        on duplicate key update
username = values(username) password = values(password) nickname = values(nickname) header = values(header) email = values(email) spell = values(spell) create_time = values(create_time) update_time = values(update_time) status = values(status) del_flag = values(del_flag)     </insert>

</mapper>

